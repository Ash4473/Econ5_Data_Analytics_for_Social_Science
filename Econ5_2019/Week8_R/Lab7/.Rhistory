rep112 <- subset(rep, subset = (congress == 112))
dem112 <- subset(dem, subset = (congress == 112))
rep <- subset(congress, subset = (party == "Republican"))
dem <- congress[congress$party == "Democrat", ] # alternative method
# Further subset the data by party and by 80th and 112th congress
rep80 <- subset(rep, subset = (congress == 80))
dem80 <- subset(dem, subset = (congress == 80))
rep112 <- subset(rep, subset = (congress == 112))
dem112 <- subset(dem, subset = (congress == 112))
rep <- subset(congress, subset = (party == "Republican"))
dem <- congress[congress$party == "Democrat", ] # alternative method
# Further subset the data by party and by 80th and 112th congress
rep80 <- subset(rep, subset = (congress == 80))
dem80 <- subset(dem, subset = (congress == 80))
rep112 <- subset(rep, subset = (congress == 112))
dem112 <- subset(dem, subset = (congress == 112))
# Start-up commands
rm(list = ls())
# Start-up commands
rm(list = ls())
setwd("/Users/arushikaushik/Desktop/Poli:Econ5/2019/22")
getwd()
# Load afghan.csv
afghan <- read.csv("afghan.csv")
# Explore data (data frame dimensions, variable names, summary stats, etc.)
dim(afghan)
names(afghan)
summary(afghan)
# Generate a table to compare levels of afghan$violent.exp.ISAF
ISAF.table <- table(afghan$violent.exp.ISAF,
exclude = NULL)
ISAF.table
# Now generate a table using prop.table().
# How is it different from using table()?
ISAF.ptable <- prop.table(table(afghan$violent.exp.ISAF,
exclude = NULL))
ISAF.ptable
################################################################################
# In Class Activity: plotting in R
################################################################################
# Helpful plotting commands: table/proptable, barplot, hist, boxplot, plot
# Helpful formatting options: names.arg, main, xlab, ylab, abline, lines,
#       freq, breaks
# Fill in the blanks below as we cover content in class.
#-----------------------------------------------------------------------
## 1. barplot()
# What proportion of Afghanis have experienced violence by the ISAF?
# We want to visualize our findings as a barplot.
# Be sure to specify a title and axis labels.
barplot(ISAF.ptable,
names.arg = c("No harm", "Harm", "Nonresponse"),
main = "Civilian victimization by the ISAF",
xlab = "Response category",
ylab = "Proportion of the respondents",
ylim = c(0, 0.7))
# Your turn!
# Repeat the exercise for the victimization by Taliban
#       (that is, use afghan$violent.exp.taliban)
Taliban.ptable <- prop.table(table(afghan$violent.exp.taliban,
exclude = NULL ))
Taliban.ptable
barplot(Taliban.ptable,
names.arg = c("No harm", "Harm", "Nonresponse"),
main = "Civilian victimization by the Taliban",
xlab = "Response category",
ylab = "Proportion of the respondents",
ylim = c(0, 0.7) )
#------------------------------------------------------------------------
## 2. hist()
# Create a histogram of respondent ages, and add a title + axes labels
hist(afghan$age, freq = FALSE,
ylim = c(0, 0.04),
xlab = "Age",
ylab = "Percent",
main = "Distribution of Respondent Age")
# Your turn! Create a histogram of education. Use `breaks' to choose bins.
hist(afghan$educ.years, freq = TRUE,
breaks = seq(from = -0.5, to = 18.5, by = 1),
xlab = "Years of Education",
ylab = "Frequency",
main = "Distribution of Respondent Education")
# Add a vertical line at the median education level using abline()
abline(v = median(afghan$educ.years))
# Add a text label "median" at (x, y) = (3, 0.5)
text(x = 3, y = 0.5, "median")
# Add a vertical line at the mean using lines()
lines(x = rep(mean(afghan$educ.years), 2),
y = c(-100, 1500))
# Add a text label "mean" at the appropriate place
text(x= mean(afghan$educ.years), y=1400, "mean")
# Can we create a histrogram for afghan$income? Why or why not?
#       Hint: check class(afghan$income)
#------------------------------------------------------------------------
## 3. boxplot()
# Make a box plot of years of education separated by province
boxplot(educ.years ~ province,
data = afghan,
main = "Education by Province",
xlab = "Province",
ylab = "Years of Education")
# Which provinces are the most educated? Which ones have median education == 0?
# Your turn! Make a boxplot of age separated by each district.
boxplot(age~ district,
data = afghan,
main = "Age by District",
xlab = "District",
ylab = "Age in Years")
#------------------------------------------------------------------------
## 4. plot() - scatterplot
# First, load the new data and explore a bit
congress <- read.csv("congress.csv")
head(congress, 10)
summary(congress)
# Subset the data by party
rep <- subset(congress, subset = (party == "Republican"))
dem <- congress[congress$party == "Democrat", ] # alternative method
# Further subset the data by party and by 80th and 112th congress
rep80 <- subset(rep, subset = (congress == 80))
dem80 <- subset(dem, subset = (congress == 80))
rep112 <- subset(rep, subset = (congress == 112))
dem112 <- subset(dem, subset = (congress == 112))
summary(rep80)
# Assign axis labels and limits to avoid repetition
xlab <- "Economic liberalism/conservatism"
ylab <- "Racial liberalism/conservatism"
lim <- c(-1.5, 1.5)
# Create a scatterplot for the 80th Congress of ideological leanings.
plot(1, type = "n", # Type "n" specifies no plotting
xlim = lim,
ylim = lim,
xlab = xlab,
ylab = ylab,
main = "80th Congress")
points(dem80$dwnom1, dem80$dwnom2,
pch = 16, col = "blue") # democrats
points(rep80$dwnom1, rep80$dwnom2,
pch = 17, col = "red") # republicans
text(-0.75, 1, "Democrats")
text(1, -1, "Republicans")
# Your turn! Create a similar scatterplot for the 112th Congress
plot(1, type = "n", # Type "n" specifies no plotting
xlim = lim,
ylim = lim,
xlab = xlab,
ylab = ylab,
main = "112th Congress")
points(dem112$dwnom1, dem112$dwnom2,
pch = 16, col = "blue") # democrats
points(rep112$dwnom1, rep112$dwnom2,
pch = 17, col = "red") # republicans
text(-0.75, 1, "Democrats")
text(1, -1, "Republicans")
#------------------------------------------------------------------------
## 5. plot() - line plot
# Calculate party median for each congress (done for you)
dem.median <- tapply(dem$dwnom1, dem$congress, median)
rep.median <- tapply(rep$dwnom1, rep$congress, median)
dem.median
plot(names(dem.median), dem.median,
col = "blue",
type = "l",
xlim = c(80, 115),
ylim = c(-1, 1),
xlab = "Congress",
ylab = "Median ideological leaning of party")
lines(names(rep.median), rep.median, col = "red")
text(110, -0.6, "Democratic\n Party")
text(110, 0.85, "Republican\n Party")
rm(list = ls())
################################################################################
# Pre Class Exercise: setup for regression in R
################################################################################
# Change directory and check
setwd("/Users/arushikaushik/Desktop/Poli:Econ5/2019/23")
nba <- read.csv("nba.csv")
florida <- read.csv("florida.csv")
face <- read.csv("face.csv")
plot(nba$height, nba$blocks,
xlab = "Height",
ylab = "Blocks",
pch = 16,
main = "Height of NBA Players and Blocks")
plot(nba$height, nba$blocks,
xlab = "Height",
ylab = "Blocks",
pch = 17,
main = "Height of NBA Players and Blocks")
cor(nba$height, nba$blocks)
lm(blocks ~ height, data=nba)
fit <- lm(blocks ~ height, data=nba)
summary(fit)
abline(fit)
text(nba$height, nba$blocks+.1, nba$name, cex=0.6)
text(nba$height, nba$blocks+.1, nba$name, cex=0.4)
plot(nba$height, nba$blocks,
xlab = "Height",
ylab = "Blocks",
pch = 16,
main = "Height of NBA Players and Blocks")
fit <- lm(blocks ~ height, data=nba)
abline(fit)
text(nba$height, nba$blocks+.1, nba$name, cex=0.4)
View(florida)
head(florida)
plot(florida$Perot96, florida$Buchanan00,
xlab = "Perot's votes in 1996",
ylab = "Buchanan's votes in 2000",
main = "Third Party Vote in Florida, 1996 & 2000",
pch = 16)
fit2 <- lm(florida$Buchanan00 ~ florida$Perot9 )
summary(fit2)
# Add the trendline to your plot.
abline(fit2)
florida$county[resid(fit2) == max(resid(fit2))] -> NA
florida$county[florida$county == "max(resid(fit2))"PalmBeach] <- NA
florida$county[florida$county == "PalmBeach] <- NA
}
}
]
face$d.share <- face$d.votes/(face$d.votes + face$r.votes)
face$r.share <- face$r.votes/(face$d.votes + face$r.votes)
face$diff.share <- face$d.share - face$r.share
# Plot vote margin in favor of the Democratic candidate as a function of her competence score
face$w.party <- as.character(face$w.party) # change class of winning party letter to character from factor
plot(face$d.comp, face$diff.share,
pch = face$w.party,
col = ifelse(face$w.party == "R", "red", "blue"),
xlim = c(0,1),
ylim = c(-1,1),
xlab = "Competence scores for Democrats",
ylab = "Democratic margin in vote share",
main = "Facial Competence in Vote Share")
# Regress the model diff.share = beta0 + beta1 * d.comp
fit3 <- lm(face$diff.share ~ face$d.comp)
# Add a trendline to your plot
abline(fit3)
florida$county[resid(fit2) == max(resid(fit2))]
florida$county[resid(fit2) == max(resid(fit2))] -> "NULL"
florida$county[resid(fit2) == max(resid(fit2))] -> "NULL"
florida$county[resid(fit2) == max(resid(fit2))] -> NULL
florida$county[resid(fit2) == max(resid(fit2))]
florida$county[resid(fit2) == max(resid(fit2))] -> "NULL"
vec <- c(1,5,8)
vec[3] <- 2
vec
vec[3] <- NULL
vec[3] <- "NULL"
florida$county[resid(fit2) == max(resid(fit2))] -> "NULL"
florida$county[resid(fit2) == max(resid(fit2))]
outliers <- data.frame(florida$county[resid(fit2) == max(resid(fit2))])
View(outliers)
which(florida$county[resid(fit2) == max(resid(fit2))])
which(resid(fit2) == max(resid(fit2)))
florida.2 <- florida[c(1:49, 52:67),]
florida.2 <- florida[c(1:49, 51:67),]
florida.2$county[resid(fit2) == max(resid(fit2))]
getwd()
rm(list = ls())
setwd("/Users/arushikaushik/Desktop/Poli:Econ5/2019/23")
social <- read.csv("social.csv")
summary(social)
rm(list = ls())
setwd("/Users/arushikaushik/Desktop/Poli:Econ5/2019/24")
social <- read.csv("social.csv")
summary(social)
View(social)
names(social)
boxplot(age~treatment, data = social,
main = "Age by Treatment",
xlab = "Treatment",
ylab = "Age")
boxplot(age~treatment, data = social,
main = "Age by Treatment",
xlab = "Treatment",
ylab = "Age")
female.table <- table(social$treatment[social$sex == "female"])/table(social$treatment)
barplot(female.table,
main = "% of female",
xlab = "Response category",
ylab = "Proportion of the respondents",
ylim = c(0, 0.7))
voted.table <- table(social$treatment[social$voted == "Yes"])/table(social$treatment)
barplot(voted.table,  main = "% of voters",
xlab = "Response category",
ylab = "Proportion of the respondents",
ylim = c(0, 0.7) )
social$control <- as.integer(social$treatment == "Control")
social$civicduty <- as.integer(social$treatment == "CivicDuty")
social$hawthorne <- as.integer(social$treatment == "Hawthorne")
social$self <- as.integer(social$treatment == "Self")
social$neighbors <- as.integer(social$treatment == "Neighbors")
social$voted <- as.integer(social$voted == "Yes")
model1 <- lm(social$voted ~ social$civicduty + social$hawthorne +
social$self + social$neighbors )
summary(model1)
class(treatment)
class(social$treatment)
model2 <- lm(social$voted ~ social$control + social$civicduty + social$hawthorne +
social$self + social$neighbors -1)
summary(model2)
df <- subset(social, subset = (treatment == "Control" | treatment == "Neighbors"),
select = c("voted", "control", "neighbors", "p2004", "age"))
voted04 <- as.integer(df$p2004 == "Yes")
summary(df)
df$voted06 <- as.integer(df$p2006 == "Yes")
voted06 <- as.integer(df$p2006 == "Yes")
df$int <- voted04 *neighbors
df$neighbors <- as.integer(df$treatment == "Neighbors")
View(df)
df$voted04 <- as.integer(df$p2004 == "Yes")
df$voted06 <- as.integer(df$p2006 == "Yes")
df <- subset(social, subset = (treatment == "Control" | treatment == "Neighbors"),
select = c("voted", "control", "neighbors", "p2004", "age","p2006" ))
df$voted04 <- as.integer(df$p2004 == "Yes")
df <- subset(social, subset = (treatment == "Control" | treatment == "Neighbors"),
select = c("voted", "control", "neighbors", "p2004", "age","p2006" ))
df$voted04 <- as.integer(df$p2004 == "Yes")
summary(df)
# 1. Let's see if treatment was greater or lesser for those who voted in the
#   2004 primary. Fit a linear model that predicts voting in the 2006 primary
#   using:
#     1) whether the person voted in the 2004 primary (voted04),
#     2) whether the person recieved the "neighbors" treatment, and
#     3) whether the person BOTH voted in the 2004 primary AND recieved treatment.
df$voted06 <- as.integer(df$p2006 == "Yes")
#df$neighbors <- as.integer(df$treatment == "Neighbors")
df$int <- df$voted04 *df$neighbors
model3 <- lm(voted06 ~ voted04 + neighbors + int, data=df )
View(df)
df <- subset(social, subset = (treatment == "Control" | treatment == "Neighbors"),
select = c("voted", "control", "neighbors", "p2004", "age","p2006" ))
df <- subset(social, subset = (treatment == "Control" | treatment == "Neighbors"))
df$voted04 <- as.integer(df$p2004 == "Yes")
df$voted06 <- as.integer(df$p2006 == "Yes")
#df$neighbors <- as.integer(df$treatment == "Neighbors")
df$int <- df$voted04 *df$neighbors
model3 <- lm(voted06 ~ voted04 + neighbors + int, data=df )
df <- subset(social, subset = (treatment == "Control" | treatment == "Neighbors"))
df$voted04 <- as.integer(df$p2004 == "Yes")
summary(df)
# 1. Let's see if treatment was greater or lesser for those who voted in the
#   2004 primary. Fit a linear model that predicts voting in the 2006 primary
#   using:
#     1) whether the person voted in the 2004 primary (voted04),
#     2) whether the person recieved the "neighbors" treatment, and
#     3) whether the person BOTH voted in the 2004 primary AND recieved treatment.
df$voted06 <- as.integer(df$voted == "Yes")
#df$neighbors <- as.integer(df$treatment == "Neighbors")
df$int <- df$voted04 *df$neighbors
model3 <- lm(voted06 ~ voted04 + neighbors + int, data=df )
summary(model3)
df <- subset(social, subset = (treatment == "Control" | treatment == "Neighbors"))
df$voted04 <- as.integer(df$p2004 == "Yes")
summary(df)
df$voted06 <- as.integer(df$voted == "Yes")
df$int <- df$voted04 *df$neighbors
model3 <- lm(voted06 ~ voted04 + neighbors + int, data=df )
summary(model3)
model3 <- lm(voted06 ~ voted04 + neighbors + int -1, data=df )
summary(model3)
df$age_2 <- df$age^2
df$nbr_age <- df$neighbors*df$age
df$nbr_age2 <- df$neighbors*df$age_2
df$age_2 <- df$age^2
df$nbr_age <- df$neighbors*df$age
df$nbr_age2 <- df$neighbors*df$age_2
model4 <- lm(df$voted ~ df$neighbors + df$age + df$age_2 + df$nbr_age + df$nbr_age2)
summary(model4)
model3 <- lm(voted ~ voted04 + neighbors + int , data=df )
summary(model3)
predict.control <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 0))
predict.treat <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 1))
plot(x = 25:85, y =predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y =predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
plot(x = 25:85, y =predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y =predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
plot(x = 25:85, y =predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y =predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
plot(x = 25:85, y = predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y = predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
model4 <- lm(voted ~ neighbors + age + I(age^2) + neighbors*age + neighbors*I(age^2), data = df)
summary(model4)
# Next we will predict voting using the model for people ages 20 - 85:
predict.control <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 0))
predict.treat <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 1))
# Now plot a line plot of predicted control vs treated:
plot(x = 25:85, y = predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y = predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
df$age_2 <- (df$age)^2
df$nbr_age2 <- df$neighbors*df$age_2
model4 <- lm(df$voted ~ df$neighbors + df$age + df$age_2 + df$nbr_age + df$nbr_age2)
summary(model4)
# Next we will predict voting behavior by age using our fitted model:
predict.control <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 0))
predict.treat <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 1))
plot(x = 25:85, y =predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y =predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
plot(x = 25:85, y = predict.treat - predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.1),
xlab = "Age",
ylab = "Estimated average treatment effect")
plot(x = 25:85, y =predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y =predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
df$age_2 <- (df$age)^2
df$nbr_age <- df$neighbors*df$age
df$nbr_age2 <- df$neighbors*df$age_2
model4 <- lm(df$voted ~ df$neighbors + df$age + df$age_2 + df$nbr_age + df$nbr_age2)
summary(model4)
# Next we will predict voting behavior by age using our fitted model:
predict.control <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 0))
predict.treat <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 1))
plot(x = 25:85, y =predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y =predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
model4 <- lm(voted ~ neighbors + age + I(age^2) + neighbors*age + neighbors*I(age^2), data = df)
summary(model4)
# Next we will predict voting using the model for people ages 20 - 85:
predict.control <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 0))
predict.treat <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 1))
# Now plot a line plot of predicted control vs treated:
plot(x = 25:85, y = predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y = predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
# Next, take the difference in predicted turnout rates by age to determine the
#   average treatment effect by age.
plot(x = 25:85, y = predict.treat - predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.1),
xlab = "Age",
ylab = "Estimated average treatment effect")
predict.control <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 0))
predict.treat <- predict(model4, newdata = data.frame(age = 25:85, neighbors = 1))
# Now plot a line plot of predicted control vs treated:
plot(x = 25:85, y = predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.5),
xlab = "Age",
ylab = "Predicted turnout rate")
lines(x = 25:85, y = predict.treat, lty = "dashed")
text(40, 0.45, "Neighbors condition")
text(45, 0.15, "Control condition")
plot(x = 25:85, y = predict.treat - predict.control,
type = "l",
xlim = c(20, 90),
ylim = c(0, 0.1),
xlab = "Age",
ylab = "Estimated average treatment effect")
