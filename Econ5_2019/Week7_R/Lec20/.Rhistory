x <- 0
for(i in 1:5){
print(x)
x <- x + i
}
x <- 0
for(i in 1:5){
x <- x + i
print(x)
}
y <- rep(NA, 5)
x <- 0
for(i in 1:5){
x <- x + i
y[i] <- x
}
z <- c(1, 3, 6, 10, 15)
y == z # This should produce a vector of TRUEs if you coded correctly.
z[
]
if (z>3)
{}
if (z>3)
{ print(z)}
"String
"
z +
z
print(z)
z
list.1 = 1:10
for (i in list.1) {
x <- i^2
print(x)
}
list.1^2
fibs[1] <- 1
fibs[2] <- 1
fibs <- rep(NA, iterations)
iterations <- 20
fibs <- rep(NA, iterations)
fibs
fibs[1] <- 1
fibs[2] <- 1
fibs
for (i in 3:length(fibs)) {
fibs[i] <- fibs[i-1] + fibs[i-2]
print(fibs[i])
}
print(fibs)
iterations <- 20
fibs <- rep(NA, iterations)
fibs[1] <- 1
fibs[2] <- 1
data(uspop)
uspop
n <- length(uspop)
# Step 1: use i as a number itself
for(i in 1:n){
print(1780 + 10*i)
}
year <- rep(0, n)
for(i in 1:n){
year[i] <- 1780 + 10*i
print(year[i])
}
sequence1 <- seq(1790, 1970, 10)
for(i in sequence1){
print(i)
}
year.str <- as.character(year2)
for(i in year.str){
print(i)
}
elevation <- 5
time <- 0
position <- NA
while(elevation > 0){
elevation <- elevation + (sample(0:1, 1)*2 - 1)
time <- time + 1
position[time] <- elevation
}
print(paste("CRASH! You lasted", time, "periods."))
# Bonus: Store the plane's elevation every period in a new vector called 'position'
# using 'time' as your index, and run the following code:
plot(1:time, position)
iterations <- 1000000
seq <- 0
for(i in 1:iterations){
if(i %% 2 == 1){
seq <- seq + 4/i
}
}
seq
iterations <- 1000000
seq <- 0
add <- 1
for(i in 1:iterations){
if(i %% 2 == 1){
if(add == 1){
seq <- seq + 4/i
add <- 0
} else {
seq <- seq - 4/i
add <- 1
}
}
}
seq
iterations <- 1000000
seq <- 0
for(i in 1:iterations){
if(i %% 2 == 1){
seq <- seq + 4/i
}
}
seq
