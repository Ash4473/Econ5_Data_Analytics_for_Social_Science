resume <- read.csv("resume.csv")
vec <- c(TRUE, TRUE, FALSE, TRUE)
sum(vec)
TRUE == FALSE
5 < 3
5 < 3 | 2 < 3
5 < 3 & 2 < 3
"Triton" != "triton"
?:
vec1 <- 1:6
vec1
?seq
vec2 <- seq(0,10,by=2)
vec2
vec1 > vec2
vec1[3]
vec2[2:3]
vec3
vec2[-1:3]
vec2[-c(1:3)]
vec2[-3:-1)]
vec2[-3:-1]
vec3 <- c(vec1[1:3], vec2[-3:-1])
class("")
class(c())
a <- c(0.5, 1.75, 2.15)
as.integer(a)
a[3] <- "text"
a[3] <- 3
logic1 | logic2
logic1 = c(TRUE, TRUE, FALSE, TRUE)
logic2 = c(TRUE, FALSE, FALSE, FALSE)
logic1 | logic2
logic1 & logic2
TRUE > F
TRUE < F
sum(logic1 | logic2)
sum(logic1 | logic2) < 5
sum(logic1 | logic2) < "5"
5 < "5"
5 == "5"
resume$race == "black"
?typeof
resume <- read.csv("resume.csv")
help("seq")
?seq
resume <- read.csv("resume.csv")
class(resume)
rm(list = ls())
getwd
getwd()
setwd("/Users/arushikaushik/Desktop/Poli:Econ5/2019/Lec17")
resume <- read.csv("resume.csv")
vec <- c(TRUE, TRUE, FALSE, TRUE)
vec
sum(vec)
TRUE == FALSE
5 < 3
5 < 3 | 2 < 3
5 < 3 & 2 < 3
"Triton" != "triton"
vec1 <- seq(1,6, by=1)
vec1
vec1 <- (1:6)
vec1
vec2<- seq(0,10, by=2)
vec2
vec1 > vec2
vec1[3]
vec2[2:3]
vec3[1:3] <- vec1[1:3]
# Step 2: add the last three elements of vec2 to rows 4:6 of vec3
# (hint: use brackets for BOTH vec3 and vec2!)
vec3[4:6] <- vec2[4:6]
vec3[1:3] <- vec1[1:3]
vec3 <- vec1[1:3]
vec3 <- c(vec3,vec2[4:6])
vec3
seq(10,20, length.out =6)
vec.1 <- c(1, "string")
class(vec.1)
class("")
class(c())
a <- c(0.5, 1.75, 2.15)
# There's a command: as.integer().
# What happens if you apply it to a vector "a", which contains decimals?
as.integer(a)
class(a)
a[3] <- "2.15"
class(a)
a
as.integer(a)
# What is the class of a?
class(a)
a <- c(0.5, 1.75, 2.15)
as.integer(a)
class(a)
a[3] <- "2.15"
a
class(a)
a[3] <- 2.15
class(a)
a
a[3] <- 2.15
a
logic1 = c(TRUE, TRUE, FALSE, TRUE)
logic2 = c(TRUE, FALSE, FALSE, FALSE)
# a) Evaluate logic1 | logic2
logic1 | logic2
logic1 & logic2
as.integer(TRUE)
as.integer(FALSE)
TRUE > FALSE
TRUE==TRUE
"TRUE"
x == "x"
1 == "1"
TRUE== "TRUE"
a =="a"
a
a <- "a"
a
a== "a"
resume$race[1:5]
resume[,"race"]
mean(resume$call[resume$race == "black"])
resume_race <- resume[race=="black"]
resume_race <- resume["race"=="black"]
View(resume_race)
resume_race <- resume[resume$race=="black"]
resume_race <- resume[race=="black"]
mean(resume$call[resume$race == "black"])
black <- subset(resume, select = c("firstname", "sex", "call"), subset = (race == "black"))
mean(black$call)
a <- c(0.5, 1.75, 2.15)
# There's a command: as.integer().
# What happens if you apply it to a vector "a", which contains decimals?
as.integer(a)
# What is the class of a?
class(a)
# Overwrite the third element of "a" as a text string (character).
a[3] <- "2.15"
class(a)
a
a[3] <- 2.15
class(a)
a
logic1 = c(TRUE, TRUE, FALSE, TRUE)
logic2 = c(TRUE, FALSE, FALSE, FALSE)
# a) Evaluate logic1 | logic2
logic1 | logic2
logic1 & logic2
as.integer(TRUE)
TRUE > FALSE
logic.a <- logic1 | logic2
logic.b <- logic1 & logic2
sum(logic.a) - sum(logic.b)
as.integer(logic.a)
as.integer(logic.b)
5 < "a"
5 < "5"
resume <- read.csv("resume.csv")
# Use summary() to explore the data. How many variables are there?
summary(resume)
table.1 <- table(resume$race, resume$call)
table.1
table.1 <- addmargins(table.1)
table.1
mean(resume$call[resume$race == "black"])
mean(resume$call[resume$race == "white"])
WhiteFemale <- subset(resume, resume$race == "white" & resume$sex == "female",
)
WhiteFemale <- subset(resume, resume$race == "white" & resume$sex == "female",
select = c("firstname", "call"))
dim(WhiteF)emale)
dim(WhiteFemale)
BlackFemale <- subset(resume, resume$race == "black" & resume$sex == "female",
)
BlackFemale <- subset(resume, resume$race == "black" & resume$sex == "female",
select = c("firstname", "call"))
dim(BlackFemale)
mean(WhiteFemale$call) - mean(BlackFemale$call)
WhiteMale <- subset(resume, resume$race == "white" & resume$sex == "male",
select = c("firstname", "call"))
BlackMale <- subset(resume, resume$race == "black" & resume$sex == "male",
select = c("firstname", "call"))
mean(WhiteMale$call) - mean(BlackMale$call)
mean(WhiteFemale$call) - mean(BlackFemale$call)
seq(10,20, length.out =6)
z.str <- c("1", "2", "602")
as.numeric(z.str)+ c(1,1,1)
z.str
z.str <- as.numeric(z.str)
z.str
is.logical(TRUE)
is.TRUE(TRUE)
isTRUE(2>3)
isTRUE(3>2)
as.integer(0.3)
as.integer(1.23)
pie
pi
e
esp
exp
vec.1 <- c(1, "string")
class(vec.1)
vec.1
class("")
class(c())
class()
empty <- c()
a <- c(0.5, 1.75, 2.15)
as.integer(a)
class(a)
a[3] <- "2.15"
a
class(a)
a[3] <- 2.15
a
class(a)
logic1 = c(TRUE, TRUE, FALSE, TRUE)
logic2 = c(TRUE, FALSE, FALSE, FALSE)
logic.a <- logic1 | logic2
logic.b <- logic1 & logic2
a
5 < "a"
resume <- read.csv("resume.csv")
table(resume$race, resume$call)
table.1 <- table(resume$race, resume$call)
table.1
table.1 <- addmargins(table.1)
table.1
mean(resume$call)
mean(resume$call[resume$race == "black"])
mean(resume$call[resume$race == "white"])
rm(list = ls())
getwd()
resume <- read.csv("resume.csv")
head(resume[["call"]], 10)  # Double bracket
head(resume["call"], 10)  # Single bracket
head(resume$call, 10)
a <- which(resume$race == "black")
b <- resume$race == "black"
tail(resume$call[which(resume$race == "black")], 10)
tail(resume$call[resume$race == "black"], 10)
head(a, 10)
head(b, 10)
resume$race[1:5]
resume[,"race"]
